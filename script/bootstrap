#!/usr/bin/env sh

MYHOST=$(uname -n | sed 's/\..*//')     # alternative to $(hostname -s), as arch does not install 'hostname' by default

if [ ! "$(id -u)" -eq 0 ] && [ ! -e ~/.ssh/id_rsa_"${MYHOST}".pub ] ; then
    echo "" && ssh-keygen -t rsa -b 4096 -C "$(whoami)@${MYHOST}" -f "${HOME}"/.ssh/id_rsa_"${MYHOST}"
    echo ""
    echo "Copy id_rsa_${MYHOST}.pub to gitea, gitolite-admin, gitolite1-admin & gitolite2-admin. Restart bootstrap once completed..."
    echo ""
    exit 1
fi

if [ ! "$(id -u)" -eq 0 ] && [ ! -d "$HOME/.dotfiles" ]; then
  git clone https://github.com/tomhoover/dotfiles ~/.dotfiles
else
  (
    cd ~/.dotfiles || exit 2
    git pull --rebase --autostash
  )
fi

if [ "$(uname)" = Darwin ] ; then
    [ -r /usr/local/bin/brew ] && BIN="/usr/local/bin"
    [ -r /opt/homebrew/bin/brew ] && BIN="/opt/homebrew/bin"
    "$BIN/brew" doctor || true
    "$BIN/brew" install mr vcsh
elif [ "$(uname)" = Linux ] && [ -f /etc/arch-release ] ; then
    ~/.dotfiles/script/arch
    BIN="/usr/bin"
    if [ ! -d "$HOME/.config/vcsh/repo.d/dotfiles.git" ] ; then
        mv ~/.bash_profile ~/.bash_profile.bak
        mv ~/.bashrc ~/.bashrc.bak
    fi
elif [ "$(uname)" = Linux ] && [ "${MYHOST}" = unraid ] ; then
    BIN="/usr/local/bin"
    if [ ! -d "$HOME/.config/vcsh/repo.d/dotfiles.git" ] ; then
        mv ~/.bash_profile ~/.bash_profile.bak
    fi
    if [ "$(id -u)" -eq 0 ] ; then
        cd /etc/bash_completion.d && wget -N https://raw.githubusercontent.com/git/git/v2.14.1/contrib/completion/git-completion.bash
        cd /usr/bin && ln -sf 'vim' 'vi'
        mkdir -p /usr/local/src
        cd /usr/local/src || exit 3
        if [ ! -d "vcsh/.git" ] ; then
            git clone https://github.com/RichiH/vcsh.git
            cd /usr/local/bin && ln -sf /usr/local/src/vcsh/vcsh .
        fi
        cd /usr/local/src || exit 4
        if [ ! -d "myrepos/.git" ] ; then
            git clone https://git.joeyh.name/git/myrepos.git/
            cd /usr/local/bin && ln -sf /usr/local/src/myrepos/mr .
        fi
        cd /usr/local/src || exit 5
        if [ ! -d "colordiff/.git" ] ; then
            git clone https://github.com/daveewart/colordiff.git
            cd /usr/local/bin && ln -sf /usr/local/src/colordiff/colordiff.pl colordiff
        fi
    fi
elif [ "$(uname)" = Linux ] ; then
    BIN="/usr/bin"
    if [ ! -d "$HOME/.config/vcsh/repo.d/dotfiles.git" ] ; then
        mv ~/.profile ~/.profile.bak
        mv ~/.bashrc ~/.bashrc.bak
    fi
    if [ "$(id -u)" -eq 0 ] ; then
        apt-get update && apt-get --yes install colordiff curl etckeeper git keychain myrepos sudo vcsh vim zsh
        # if [ ! -d /etc/.git ] ; then
            cd /etc || exit 6
            # sudo etckeeper init
            sudo git config user.email "root@$(uname -n)"
            sudo git config user.name "root"
            # sudo etckeeper commit 'Initial commit'
            # popd
            { echo "" ; echo "Required commands have been installed. Restart bootstrap.sh as normal user..." ; echo "" ; exit 7 ; }
        # fi
    else
        # shellcheck disable=SC2015
        command -v curl >/dev/null 2>&1 && \
          command -v git >/dev/null 2>&1 && \
          command -v mr >/dev/null 2>&1 && \
          command -v sudo >/dev/null 2>&1 && \
          command -v vcsh >/dev/null 2>&1 && \
          command -v vim >/dev/null 2>&1 && \
          command -v zsh >/dev/null 2>&1 || \
          { echo "" ; echo "Re-run bootstrap.sh as root to install required commands..." ; echo "" ; exit 8 ; }
    fi
    if [ ! -f /etc/arch-release ] ; then
        if [ ! -d "$HOME/.config/vcsh/repo.d/apt.git" ] ; then
            "$BIN/vcsh" clone "https://github.com/tomhoover/apt-vcsh.git" "apt"
        fi
        # sudo aptitude install "$(cat ~/.config/apt/installed)"
        # sudo apt-mark manual $(cat ~/.config/apt/installed) 	# this line is probably not needed, but added for good measure
    fi
fi

REPOS="dotfiles
git
mr"
while read -r REPO; do
    if [ ! -d "$HOME/.config/vcsh/repo.d/$REPO.git" ] ; then
        "$BIN/vcsh" clone "https://github.com/tomhoover/${REPO}-vcsh.git" "${REPO}"
    fi
done <<EOF
$REPOS
EOF

echo ""
cd && "$BIN/mr" -m -j 1 up
# shellcheck disable=SC2015
cd && [ -f ".config/crontab/${MYHOST}.$(whoami).crontab" ] && crontab ".config/crontab/${MYHOST}.$(whoami).crontab" || true

# echo ""
# if [ ! "$(id -u)" -eq 0 ] && [ ! -d "$HOME/.asdf" ]; then
#     git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.12.0
# else
#     ~/.dotfiles/asdf-plugins/install.sh
# fi

if [ ! "$(id -u)" -eq 0 ]; then
    ~/.dotfiles/script/install
fi

echo ""
echo "#######################################################################################"
echo ""
echo "chsh -s $(which zsh)"
echo ""
echo "Execute above command to change shell. Then, logout and login to re-read configuration."
echo ""
echo "---------------------------------------------------------------------------------------"
echo ""
echo "Finally, to install 'private-vcsh' repo:"
# echo "  vcsh clone 'gitea:tom/private-vcsh.git' 'private' && vcsh private remote add gitolite1 gitolite1:private-vcsh.git && vcsh private remote add gitolite2 gitolite2:private-vcsh.git"
echo "  vcsh clone 'gitea:tom/private-vcsh.git' 'private' && cd ~/src && mr -m -j 1 up"
echo ""
