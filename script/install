#!/usr/bin/env bash
# shellcheck disable=SC2015

# Run all dotfiles installers.
# https://github.com/MartinHeinz/dotfiles/blob/master/script/install

set -e

# add python build dependencies for debian/ubuntu
command -v apt >/dev/null 2>&1 && \
    ( command -v gcc >/dev/null 2>&1 && \
      command -v make >/dev/null 2>&1 && \
      command -v curl >/dev/null 2>&1 || \
      sudo apt --yes install build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
      libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev )

# ensure rtx is available on the PATH
ln -sf ~/.local/share/rtx/bin/rtx ~/.local/bin/rtx

cd "$(dirname "$0")"/..

# find the installers and run them iteratively
find . -name install.sh | sort | while read -r installer ; do
    program=$(echo "$installer" | sed -e 's/^\.\///' -e 's/^[0-9]-//' -e 's/\/.*$//')
    if command -v "${program}" >/dev/null 2>&1 ; then continue; fi
    echo
    echo "Installing ${program}..."
    if [ "$program" = direnv ]; then
        sh -c "bin_path=~/.local/bin ${installer}" || exit 90
    else
        sh -c "${installer}" || exit 99
    fi
done

# disable exit on error
set +e

echo
# for item in pyenv asdf rtx pipx ansible black cookiecutter flake8 isort ipython pre-commit pylint tmuxp mypy pipenv molecule ; do
for item in rtx pipx ansible black cookiecutter flake8 isort ipython pre-commit pylint tmuxp molecule ; do
    echo "Installed versions of ${item}:"
    which -a "${item}"
done
